from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
import pandas
import sys

appWidth = 1280
appHeight = 720

listFabricant = []
listFournisseur = []
listRechercheElements = []

inventaireCSV = pandas.read_csv("inventaire.csv", on_bad_lines="skip", sep=";").dropna()
inventaireData = inventaireCSV.values.tolist()

def search():
    rowsToShow = []
    rowIndex = 0
    for row in inventaireData:
        shouldAdd = True
        if len(recherchePiece.text()) > 0:
            if not row[0].lower().startswith(recherchePiece.text().lower()):
                shouldAdd = False
        if len(rechercheDesc.text()) >= 2:
            if not rechercheDesc.text().lower() in row[1].lower():
                shouldAdd = False
        if fabricantCombo.currentText() != "N/A":
            if row[2] != fabricantCombo.currentText():
                shouldAdd = False
        if fournisseurCombo.currentText() != "N/A":
            if row[3] != fournisseurCombo.currentText():
                shouldAdd = False
        if shouldAdd:
            rowsToShow.append(rowIndex)
        rowIndex = rowIndex + 1
    if len(rowsToShow) == len(inventaireData):
        for i in range(len(inventaireData)):
            table.showRow(i)
    else:
        for i in range(len(inventaireData)):
            if i in rowsToShow:
                table.showRow(i)
            else:
                table.hideRow(i)

def createWidget(layout):
    widget = QWidget()
    widget.setLayout(layout)
    return widget

def createTableItem(label):
    item = QTableWidgetItem(str(label))
    item.setFlags(Qt.ItemIsSelectable | Qt.ItemIsEnabled)
    return item

for row in inventaireData:
    if not row[2] in listFabricant:
        listFabricant.append(row[2])
    
    if not row[3] in listFournisseur:
        listFournisseur.append(row[3])

app = QApplication(sys.argv)
window = QMainWindow()
window.setGeometry(int(app.primaryScreen().size().width() / 2 - appWidth / 2), int(app.primaryScreen().size().height() / 2 - appHeight / 2), appWidth, appHeight)
window.setWindowTitle("TP Exploitation de BD")
window.setStyleSheet("background-color: white;")

rootVBox = QVBoxLayout()

table = QTableWidget()
table.setColumnCount(5)
table.setRowCount(len(inventaireData))
table.setHorizontalHeaderLabels(["Numéro", "Description", "Fabricant", "Fournisseur", "Prix"])

tableRow = 0
for row in inventaireData:
    table.setItem(tableRow, 0, createTableItem(row[0]))
    table.setItem(tableRow, 1, createTableItem(row[1]))
    table.setItem(tableRow, 2, createTableItem(row[2]))
    table.setItem(tableRow, 3, createTableItem(row[3]))
    table.setItem(tableRow, 4, createTableItem(row[4]))
    tableRow = tableRow + 1

table.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
table.resizeRowsToContents()

rechercheHBox = QHBoxLayout()

recherchePiece = QLineEdit()
recherchePiece.setPlaceholderText("#Piece")
recherchePiece.textChanged.connect(search)
listRechercheElements.append(recherchePiece)

fabricantCombo = QComboBox()
fabricantCombo.addItem("N/A")
fabricantCombo.textActivated.connect(search)
for fabricant in listFabricant:
    fabricantCombo.addItem(str(fabricant))

listRechercheElements.append(fabricantCombo)

fournisseurCombo = QComboBox()
fournisseurCombo.addItem("N/A")
fournisseurCombo.textActivated.connect(search)
for fournisseur in listFournisseur:
    fournisseurCombo.addItem(str(fournisseur))

listRechercheElements.append(fournisseurCombo)
    
rechercheDesc = QLineEdit()
rechercheDesc.setPlaceholderText("Description")
rechercheDesc.textChanged.connect(search)
listRechercheElements.append(rechercheDesc)

rechercheHBox.addWidget(QLabel("Recherche par pièce"))
rechercheHBox.addWidget(recherchePiece)
rechercheHBox.addWidget(QLabel("Recherche par fabricant"))
rechercheHBox.addWidget(fabricantCombo)
rechercheHBox.addWidget(QLabel("Recherche par fournisseur"))
rechercheHBox.addWidget(fournisseurCombo)
rechercheHBox.addWidget(QLabel("Recherche par description"))
rechercheHBox.addWidget(rechercheDesc)

rootVBox.addWidget(table)
rootVBox.addWidget(createWidget(rechercheHBox))
window.setCentralWidget(createWidget(rootVBox))

window.show()

sys.exit(app.exec())